import { Component } from '@angular/core';import { Wakanda } from './wakanda.service';import { MdDialog, MdDialogRef } from '@angular/material';@Component({  selector: 'app-root',  providers: [Wakanda],  templateUrl: './app.component.html',  styleUrls: ['./app.component.css']})export class AppComponent {  title = 'app';  constructor(public wakanda: Wakanda) {    /**     * To customize the behaviour of the Wakanda service,     * edit the wakanda.service.ts file content.     */    /**     * Example 1:     * Get Wakanda Catalog     */  	wakanda.getCatalog(['Travelers']).then( (ds) =>   	{		ds.Travelers.find(4).then( (Traveler)=> 		{			Traveler.firstName = "firstname";			Traveler.surname = "surname";			Traveler.mobile = "mobile";			Traveler.homePhone = "homePhone"			Traveler.passportNumber = "passportNumber";			Traveler.passportCountry = "passportCountry";			Traveler.birthCountry = "birthCountry";			return Traveler.save()     	//Our entity is updated		});	});    /**     * Example 2:     * Get the catalog only if a user is logged-in.     *      * For more details about getCurrentUser, visit: https://wakanda.github.io/doc/#/guide?section=main-data-cs-directorymethods     */    wakanda.directory.getCurrentUser()      .then(user => {        /**         * To access current user info, use : user.userName, user.fullName, user.ID         */        wakanda.getCatalog()          .then((ds) => {            /**             * Do something             */          });      })      .catch(error => {        console.log("No user is logged-in");      });  }}